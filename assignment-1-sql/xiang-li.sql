-- QUESTION 1
SELECT ID AS ORDER_ID, COMPLETED_AT, CHARGE_AMOUNT
FROM DWH.FACT_ORDER 
WHERE CHARGE_AMOUNT > 500
    AND COMPLETED_AT IS NOT NULL 
ORDER BY COMPLETED_AT DESC 
LIMIT 1;



-- QUESTION 2
SELECT 
	DATE_TRUNC('week', COMPLETED_AT) AS WEEK_OF, 
	COUNT(*) AS ORDER_COUNT, 
	SUM(CHARGE_AMOUNT) AS GMV
FROM DWH.FACT_ORDER FO 
JOIN RDS_DATA.ZONES Z ON FO.ZONE_ID = Z.ID
JOIN RDS_DATA.REGIONS R ON Z.REGION_ID = R.ID
JOIN RDS_DATA.COUNTRIES C ON R.COUNTRY_ID = C.ID
WHERE C.NAME = 'Canada'
	AND FO.COMPLETED_AT IS NOT NULL
	AND DATE_TRUNC('week', COMPLETED_AT) <> DATE_TRUNC('week', CURRENT_DATE)
GROUP BY 1
ORDER BY 1 DESC 
LIMIT 8;



-- QUESTION 3
SELECT 
	CASE 
		 WHEN EMPLOYMENT_LENGTH IS NULL OR EMPLOYMENT_LENGTH < 0 THEN 'N/A'
		 WHEN EMPLOYMENT_LENGTH BETWEEN 0 AND 5 THEN '0-5'
		 WHEN EMPLOYMENT_LENGTH BETWEEN 6 AND 11 THEN '6-11'
		 WHEN EMPLOYMENT_LENGTH BETWEEN 12 AND 17 THEN '12-17'
		 WHEN EMPLOYMENT_LENGTH BETWEEN 18 AND 23 THEN '18-23'
		 WHEN EMPLOYMENT_LENGTH >= 24 THEN '24+' END AS EMPLOYMENT_LENGTH_RANGE,
	COUNT(*) AS SHOPPER_CT,
	SHOPPER_CT/SUM(SHOPPER_CT) OVER () AS PCT
FROM 
(
	SELECT CASE WHEN HIRED_AT IS NULL THEN NULL ELSE DATEDIFF('month', HIRED_AT, CURRENT_DATE) END AS EMPLOYMENT_LENGTH, ID
	FROM RDS_DATA.DRIVERS 
	WHERE ACTIVE = TRUE
)
GROUP BY 1
ORDER BY 3 DESC 


-- QUESTION 4

WITH SHOPPER_AGE_RANGE AS 
(
	SELECT ID,
		CASE WHEN HIRED_AT IS NULL THEN NULL ELSE DATEDIFF('month', HIRED_AT, CURRENT_DATE) END AS EMPLOYMENT_LENGTH, 
		CASE 
		 WHEN EMPLOYMENT_LENGTH IS NULL OR EMPLOYMENT_LENGTH < 0 THEN 'N/A'
		 WHEN EMPLOYMENT_LENGTH BETWEEN 0 AND 5 THEN '0-5'
		 WHEN EMPLOYMENT_LENGTH BETWEEN 6 AND 11 THEN '6-11'
		 WHEN EMPLOYMENT_LENGTH BETWEEN 12 AND 17 THEN '12-17'
		 WHEN EMPLOYMENT_LENGTH BETWEEN 18 AND 23 THEN '18-23'
		 WHEN EMPLOYMENT_LENGTH >= 24 THEN '24+' END AS EMPLOYMENT_LENGTH_RANGE
	FROM RDS_DATA.DRIVERS 
	WHERE ACTIVE = TRUE
)
SELECT SAR.EMPLOYMENT_LENGTH_RANGE, ROUND(SUM(SM.TOTAL_DELIVERIES_COUNT)/SUM(SM.TOTAL_MPI),2) AS AVG_MPI
FROM SHOPPER_AGE_RANGE SAR 
JOIN RDS_DATA.SHOPPER_METRICS SM ON SAR.ID = SM.SHOPPER_ID
GROUP BY 1
ORDER BY 2 DESC ;


-- QUESTION 5
SELECT ID, COUNT(*) AS ROW_CT
FROM RDS_DATA.DRIVERS
GROUP BY 1
HAVING ROW_CT > 1
ORDER BY 2 DESC 
LIMIT 10;  -- NO DUPLICATES


SELECT BATCH_ID, COUNT(*) AS ROW_CT
FROM DWH.FACT_BATCH
GROUP BY 1
HAVING ROW_CT > 1
ORDER BY 2 DESC 
LIMIT 10;  -- ONE BATCH CAN BE ASSIGNED TO MULTIPLE SHOPPERS


-- BONUS


SELECT ID, EMAIL
FROM ECLIPSE.USERS 
WHERE EMAIL = 'xiang.li@instacart.com';


SELECT COUNT(*) AS ORDER_CT, COUNT(CASE WHEN COMPLETED_AT IS NOT NULL THEN ID ELSE NULL END) AS COMPLETED_ORDER_CT
FROM RDS_DATA.ORDERS 
WHERE USER_ID = 22438411;


SELECT ID AS ORDER_ID
FROM RDS_DATA.ORDERS 
WHERE CHARGE_AMOUNT > 500
ORDER BY CREATED_AT DESC 
LIMIT 1;


SELECT COUNT(*)
FROM RDS_DATA.ORDER_DELIVERIES 
WHERE WAREHOUSE_ID = 1000
	AND DELIVERED_AT::DATE = CURRENT_DATE - 1;
	

SELECT USER_ID
FROM 
(
	SELECT USER_ID, OD.CREATED_AT, ROW_NUMBER() OVER (PARTITION BY USER_ID ORDER BY OD.CREATED_AT ASC) AS RN
	FROM RDS_DATA.ORDER_DELIVERIES OD 
	JOIN RDS_DATA.ORDERS O ON OD.ORDER_ID = O.ID
	WHERE OD.WAREHOUSE_ID = 1000
)
WHERE RN = 1
ORDER BY CREATED_AT ASC
LIMIT 10;


SELECT DATEADD('year', 5, to_timestamp_ntz(convert_timezone('UTC', 'US/Pacific', CREATED_AT))::DATE)
FROM ECLIPSE.USERS 
WHERE ID = 22438411;



